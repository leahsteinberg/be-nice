html.
	<div id="anchor"></div>
	<script src="http://localhost:8045/socket.io/socket.io.js"></script>
	<script src="http://fb.me/react-0.10.0.js"></script>
	<script src="http://fb.me/JSXTransformer-0.10.0.js"></script>
	<script src="http://code.jquery.com/jquery-1.10.0.min.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	<div id="date"></div>
	<script type="text/jsx">
		/** @jsx React.DOM */
		var socket = io.connect();
		
		var ChatModule = React.createClass({
			getInitialState: function(){
				return {up_messages: [], down_messages:[], current_message: '', direction_flag: true};
			},
			loadCommentsFromServer: function(){
				var that = this;
				socket.on('message', function(data){
				that.setState({up_messages: data['up_messages'], down_messages: data['down_messages']});
				});

			},
			componentWillMount: function(){
				this.loadCommentsFromServer();
			},
			onTyping: function(e){
				console.log("hii");
				this.setState({current_message: e.target.value});
			},
			handleSubmit: function(e){
				e.preventDefault();
				var that = this;
				var new_message = e.target.value;

				socket.emit('client_data', {'message': this.state.current_message});	

				this.setState({current_message: '', direction_flag: !this.state.direction_flag});
			},
			render: function(){
				var inputStyle = {
					position: "fixed",
					top: "50%",
					left: "50%",
					marginTop: "-50px",
					marginLeft: "-100px"
				}
				var divStyle = {
					textAlign: "center"
				};
				return (<div>
						<ChatScreen messages={this.state.up_messages}/>
						<form onSubmit={this.handleSubmit} value="Post">
						<input  type ="text" value={this.state.current_message} onChange={this.onTyping}/>
						<button>chat</button>
						</form>
						<ChatScreen messages={this.state.down_messages}/>
						</div>);
			}
		});
		var ChatScreen = React.createClass({
			render: function(){
				var messages = this.props.messages.map(function(message){
					return (<ChatMessage text={message.text}/>);
				});
				return (<div>{messages}</div>);
			}
		});
		var ChatMessage = React.createClass({
			render: function(){
				return(<div>{this.props.text}</div>);
			}
		});
		React.renderComponent(<ChatModule url="/chats" pollInterval={500}/>, document.getElementById("anchor"));
	</script>
	</body>